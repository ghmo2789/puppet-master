# The prefix of all of the servers endpoints.
# The endpoints for clients to use to initialize is client/init. So the full url
# could be http://localhost:8080/client/init
# If the prefix /control is used, the URL would instead be:
# http://localhost:8080/control/client/init
# The prefix is optional, and can be left blank. It is useful for reverse
# proxying without using a subdomain.
PREFIX=/control

# The hostname of the MongoDB server
MONGO_HOST=localhost

# The port of the MongoDB server
MONGO_PORT=27017

# The username for the MongoDB user
MONGO_USER=root

# The password for the MongoDB user
MONGO_PASSWORD=password

# The database to use with MongoDB
MONGO_DATABASE=control_server

# The authentication mechanism to use when connecting to MongoDB.
MONGO_AUTH_MECHANISM=SCRAM-SHA-1

# Whether or not the control server will use the mock DB instead of MongoDB for
# data storage. The mock DB is used for testing purposes, and is not persistent.
MOCK_DB=False

# Whether the control server runs in debug mode
DEBUG=False

# A salt used to generate client IDs
ID_KEY=write a secret key here

# Set to True if the server is behind a reverse proxy
BEHIND_PROXY=True

# The subnets of the reverse proxy, which it appends to the X-Forwarded-For
# header. Define them here so that the control server knows which IP addresses
# to trust.
TRUSTED_PROXIES=172.17.0.0/16,172.18.0.0/16

# The admin key, which is used to authenticate the admin endpoints. The value
# defined here is used as the value of the Authorization header in order to use
# the admin endpoints.
ADMIN_KEY=2aa3a0d9be45175b1628d5ec8c487da81f9df6432b0b5429a1d73e4e3b84b459

# A url which the tests use to test the forwarding udp control server. Not
# needed unless running tests. Expects a 200 (OK) response when doing a GET.
TEST_FORWARD_TO_HOST=https://www.blank.org/

# The HTTP control server that the UDP control server forwards traffic to. Must
# be a valid and running control server for the UDP control server to work.
# If MODE below is set to http, this is not needed.
# If MODE below is set to both, this may be set to the same example value below
#   in order to forward UDP traffic to the local HTTP control server.
# If MODE below is set to udp, this needs to be set to an already running
#   control server.
FORWARD_TO_HOST=http://127.0.0.1:5000

# Specifies if the server should listen for HTTP requests, UDP requests,
# or both.
MODE=both

# The port to listen on for UDP requests. Only used if MODE is set to udp or
# both.
UDP_PORT=36652

# The host to listen on for UDP requests. Only used if MODE is set to udp or
# both.
UDP_HOST=0.0.0.0

# The path to a file containing an obfuscation key. This key is used to
# obfuscate the contents of the UDP packets, by XORing the contents with the
# key. This is not a secure method of obfuscation, but it is sufficient for
# preventing casual snooping. The key is ideally longer than the UDP packets
# being sent, i.e. longer than the MTU. Therefore, it is recommended to use a
# key that is at least 1500 bytes long.
# If not specified, the UDP packets will not be obfuscated.
OBFUSCATION_KEY_FILE=obfuscation_key

# Specifies whether the body of the UDP packets (body, headers and URL) should
# be compressed.
USE_COMPRESSION=False

# Specifies the checksum method to use for the UDP packets. The checksum is
# used to verify that the UDP packet was not corrupted during transmission.
CHECKSUM_METHOD=fastcrc.crc16.gsm

# A comma-separated list of regexes that are used to filter what data from the
# IdentifyingClientData class is used to generate client IDs. The regexes are
# applied in order, and a property of the class is included if any regex matches
# it anywhere. It also matches child properties, so the regex
# "^client_data\\.*$" will match all properties of IdentifyingClientData's
# client_data property.
CLIENT_ID_KEYS=^client_data\\.*$